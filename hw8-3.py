# Шумская Екатерина Алексеевна

#3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять
# список. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
# очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class MyError(Exception):
    def __init__(self, txt):
        self.txt = txt


def validation(data):
    data_is_number = True
    if data[0] in '0123456789.-':
        for el in data[1:]:
            if not (el in '0123456789.'):
                data_is_number = False
                break
    else:
        data_is_number = False
    try:
        if not data_is_number:
            raise MyError('Вы ввели не число')
    except MyError as err:
        print(err)
    else:
        list_numbers.append(float(data))


list_numbers = []
n = ''
while n != 'stop':
    n = input('Введите число, для выхода введите stop: ')
    validation(n)
print(list_numbers)
